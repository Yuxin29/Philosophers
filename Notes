Day 1
------------
how to compile it.
./philo number_of_philosophers time_to_die time_to_eat time_to_sleep [number_of_times_each_philosopher_must_eat]
--------------
example output
123     2           has taken a fork
123     2           is eating
456     2           is sleeping
789     2           is thinking
999     2           died
time    philoid     action
--------------
pthread_t   variable type for POSIX process id
tids: Thread IDs


Day 2
--------------
mutex: protect the shared recource, that avery moment, it is used by only one process
how to use the data type pthread_mutex_lock

pthread_mutex_t lock;
pthread_mutex_init(&lock, NULL);
pthread_mutex_lock(&lock);
pthread_mutex_unlock(&lock);
pthread_mutex_destroy(&lock);

--------------
pthread_mutex_lock	*forks;         //same amount as philos   --->make sure each fork is taken once at a time
pthread_mutex_lock	*printf_lock;   //only one,    ---> make sure printf happens once at a time 

